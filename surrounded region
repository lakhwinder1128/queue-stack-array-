 void solve(vector<vector<char>>& board) {
        int n=board.size();
        int m=board[0].size();
        queue<pair<int,int>>q;
        for(int i=0;i<n;i++){
            if(board[i][0]=='O'){
                q.push({i,0});
                board[i][0]='A';
            }
            if(board[i][m-1]=='O'){q.push({i,m-1});
                                   board[i][m-1]='A';}
        }
        
        
            for(int i=0;i<m;i++){
            if(board[0][i]=='O'){
                q.push({0,i});
                board[0][i]='A';}
                
            if(board[n-1][i]=='O'){
                q.push({n-1,i});
                board[n-1][i]='A';
            }
        }
        
        while(q.size()){
            int row=q.front().first;
            int col=q.front().second;
            q.pop();
            
            if(row+1<n&&board[row+1][col]=='O'){
                board[row+1][col]='A';
                q.push({row+1,col});
            }
            if(row-1>=0&&board[row-1][col]=='O'){
                board[row-1][col]='A';
                q.push({row-1,col});
            }
            if(col+1<m&&board[row][col+1]=='O'){
                board[row][col+1]='A';
                q.push({row,col+1});
            }
           if(col-1>=0&&board[row][col-1]=='O'){
                board[row][col-1]='A';
                q.push({row,col-1});
            }
            
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]=='O')board[i][j]='X';
                
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]=='A')board[i][j]='O';
                
            }
        }
        
    }
